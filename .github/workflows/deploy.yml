
name: Deploy

on:
  push:
    branches: [ "main" ]

env:
  wowshop_image: '${{ secrets.DOCKER_HUB_USERNAME }}/wowshop'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.x
    - name: Restore dependencies
      run: dotnet restore

    - name: Replace CurrentImageTag in appsettings.json
      run: |
        GITHUB_SHA_SHORT=${{ github.sha }}
        sed -i 's/"CurrentImageTag": "latest"/"CurrentImageTag": "'${GITHUB_SHA_SHORT}'"/' ./Wowshop.API/appsettings.json
    - name: Build
      run: dotnet build --no-restore -c Release

  Test:

    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Test
      run: dotnet test --no-build --verbosity normal -c Release

  Container:

    runs-on: ubuntu-latest
    needs: Test

    steps:
    - name: Create Docker Image
      run: dotnet publish ./Wowshop.API/Wowshop.API.csproj /t:PublishContainer -r linux-x64
    - name: change image tag
      run: docker tag wowshop ${{ env.wowshop_image }}
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Docker Push
      run: docker push ${{ env.wowshop_image }}
    
  deploy:
    if: github.ref == 'refs/heads/main'
    outputs:
      API_URL: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'prod'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ env.wowshop_image }} 
      - name: Trigger Azure WebHook
        run: |
          curl -X POST $WEBHOOK_URL
        env:
          WEBHOOK_URL: ${{ secrets.AZURE_WEBAPP_WEBHOOK_URL }}
        shell: bash
    
    
  confirm_deployment_API:
    needs: deploy
    runs-on: ubuntu-latest
    environment:
      name: prod

    steps:
      - name: Check Deployment Health
        id: check-health
        run: |
          API_URL="${{ needs.deploy.outputs.API_URL }}"
          IMAGE_TAG="${{ github.sha }}"

          echo "Starting deployment health check..."
          echo "API_URL: $API_URL"
          echo "Expected IMAGE_TAG: $IMAGE_TAG"

          for i in {1..30}; do
            echo "Checking health of the deployed application... Attempt $i"
            response=$(curl -s -H "Content-Type: application/json" $API_URL/health)
            echo "Response: $response"

            if echo "$response" | jq -e ".imageTag == \"$IMAGE_TAG\"" > /dev/null; then
              echo "Deployment verification succeeded: imageTag matches."
              exit 0
            fi

            echo "Deployment verification failed: imageTag does not match. Retrying in 10 seconds..."
            sleep 10
          done

          echo "Deployment verification failed: imageTag did not match after 30 attempts."
          exit 1
        shell: bash
